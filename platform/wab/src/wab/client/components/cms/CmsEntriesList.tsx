// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import * as React from "react";
import { useHistory, useRouteMatch } from "react-router";
import {
  ApiCmseRow,
  CmsDatabaseId,
  CmsTableId,
} from "../../../shared/ApiSchema";
import { UU } from "../../cli-routes";
import { useApi } from "../../contexts/AppContexts";
import {
  DefaultCmsEntriesListProps,
  PlasmicCmsEntriesList,
} from "../../plasmic/plasmic_kit_cms/PlasmicCmsEntriesList";
import { Spinner } from "../widgets";
import { useCmsTable, useMutateTableRows } from "./cms-contexts";
import CmsEntryItem from "./CmsEntryItem";
import fastStringify from "fast-stringify";

export interface CmsEntriesListProps extends DefaultCmsEntriesListProps {
  rows?: ApiCmseRow[];
}

function CmsEntriesList_(
  props: CmsEntriesListProps,
  ref: HTMLElementRefOf<"div">
) {
  const { rows, ...rest } = props;
  const api = useApi();
  const history = useHistory();
  const match =
    useRouteMatch<{ databaseId: CmsDatabaseId; tableId: CmsTableId }>();
  const { databaseId, tableId } = match.params;
  const table = useCmsTable(databaseId, tableId);
  const mutateTableRows = useMutateTableRows();
  const [query, setQuery] = React.useState("");

  if (!rows || !table) {
    return <Spinner />;
  }
  const filteredRows = rows?.filter((row) => 
    fastStringify(Object.values(row))
      .toLowerCase()
      .includes(query.toLowerCase())
  );

  return (
    <PlasmicCmsEntriesList
      {...rest}
      root={{ ref }}
      modelName={table.name}
      searchInput={{
        value: query,
        onChange: (e) => setQuery(e.target.value),
      }}
      children={
        <>
          {filteredRows ?
            filteredRows.map((row) => (
              <CmsEntryItem table={table} row={row} key={row.id} />
            )): rows.map((row) => (
              <CmsEntryItem table={table} row={row} key={row.id} />
            ))}
        </>
      }
      addButton={{
        tooltip: "Add new entry",
        "data-test-id": "addEntryButton",
        onClick: async () => {
          const row = await api.createCmsRow(tableId, {
            identifier: undefined,
            data: null,
            draftData: {},
          });
          await mutateTableRows(tableId);
          history.push(
            UU.cmsEntry.fill({
              databaseId,
              tableId,
              rowId: row.id,
            })
          );
        },
      }}
    />
  );
}

const CmsEntriesList = React.forwardRef(CmsEntriesList_);
export default CmsEntriesList;
