// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import { observer } from "mobx-react-lite";
import * as React from "react";
import { RuleSet, ThemeLayoutSettings } from "../../../classes";
import { getLengthUnits } from "../../../css";
import {
  CONTENT_LAYOUT_DEFAULTS,
  CONTENT_LAYOUT_STANDARD_WIDTH_PROP,
  CONTENT_LAYOUT_VIEWPORT_GAP_PROP,
  CONTENT_LAYOUT_WIDE_WIDTH_PROP,
} from "../../../shared/core/style-props";
import { makeExpProxy } from "../../../shared/exprs";
import { RuleSetHelpers } from "../../../shared/RuleSetHelpers";
import {
  DefaultThemeLayoutPanelProps,
  PlasmicThemeLayoutPanel,
} from "../../plasmic/plasmic_kit_left_pane/PlasmicThemeLayoutPanel";
import { useStudioCtx } from "../../studio-ctx/StudioCtx";
import {
  providesStyleComponent,
  RshExpsProvider,
  StyleComponent,
} from "../style-controls/StyleComponent";
import { LabeledStyleDimItemRow } from "./sidebar-helpers";
import { SidebarSection } from "./SidebarSection";

export interface ThemeLayoutPanelProps extends DefaultThemeLayoutPanelProps {}

function ThemeLayoutPanel_(
  props: ThemeLayoutPanelProps,
  ref: HTMLElementRefOf<"div">
) {
  const studioCtx = useStudioCtx();
  const theme = studioCtx.site.activeTheme;
  const layout =
    theme?.layout ??
    new ThemeLayoutSettings({ rs: new RuleSet({ values: {}, mixins: [] }) });
  const sc = React.useMemo(() => {
    const baseExpr = new RuleSetHelpers(layout.rs, "div");
    const ensureLayout = () => {
      if (theme && !theme.layout) {
        theme.layout = layout;
      }
    };
    return new StyleComponent({
      expsProvider: new RshExpsProvider(
        makeExpProxy(baseExpr, {
          get: (p: string) => {
            return baseExpr.getRaw(p) ?? CONTENT_LAYOUT_DEFAULTS[p];
          },
          set: (p: string, val: string) => {
            baseExpr.set(p, val);
            ensureLayout();
          },
        }),
        studioCtx,
        []
      ),
    });
  }, [theme, layout, studioCtx]);
  return providesStyleComponent(sc)(
    <PlasmicThemeLayoutPanel
      root={{ ref }}
      {...props}
      children={
        <>
          <SidebarSection title={"Document layout"} className="fill-width">
            <LabeledStyleDimItemRow
              styleName={CONTENT_LAYOUT_STANDARD_WIDTH_PROP}
              label="Standard width"
              dimOpts={{
                allowedUnits: getLengthUnits("px"),
                min: 0,
              }}
              noExtract
            />
            <LabeledStyleDimItemRow
              styleName={CONTENT_LAYOUT_WIDE_WIDTH_PROP}
              label="Wide width"
              dimOpts={{
                allowedUnits: getLengthUnits("px"),
                min: 0,
              }}
              noExtract
            />
            <LabeledStyleDimItemRow
              styleName={CONTENT_LAYOUT_VIEWPORT_GAP_PROP}
              label="Viewport gap"
              dimOpts={{
                allowedUnits: getLengthUnits("px"),
                min: 0,
              }}
              noExtract
            />
          </SidebarSection>
        </>
      }
    />
  );
}

const ThemeLayoutPanel = observer(ThemeLayoutPanel_, { forwardRef: true });
export default ThemeLayoutPanel;
