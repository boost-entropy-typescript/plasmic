// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { DimTokenSpinner } from "@/wab/client/components/widgets/DimTokenSelector";
import { PlasmicScreenVariantSpec } from "@/wab/client/plasmic/plasmic_kit_variants/PlasmicScreenVariantSpec";
import { ensure } from "@/wab/shared/common";
import { parseCssNumericNew } from "@/wab/shared/css";
import { parseScreenSpec, ScreenSizeSpec } from "@/wab/shared/css-size";
import { notification } from "antd";
import * as React from "react";

interface ScreenVariantSpecProps {
  value: string;
  onChange?: (value: string) => void;
}

function ScreenVariantSpec(props: ScreenVariantSpecProps) {
  const { value, onChange } = props;
  const spec = parseScreenSpec(value);

  const onDimChange = (prop: "min-width" | "max-width", newValue: string) => {
    const newWidth =
      newValue === "" || newValue === "(unset)"
        ? undefined
        : ensure(parseCssNumericNew(newValue)).num;
    const newScreen = new ScreenSizeSpec(
      prop === "min-width" ? newWidth : spec.minWidth,
      prop === "max-width" ? newWidth : spec.maxWidth
    );

    if (
      newScreen.minWidth &&
      newScreen.maxWidth &&
      newScreen.minWidth > newScreen.maxWidth
    ) {
      notification.error({
        message: "Invalid screen size",
        description: `min-width must be less than or equal to max-width`,
      });

      return;
    }
    ensure(onChange)(newScreen.query());
  };

  return (
    <PlasmicScreenVariantSpec
      minInput={{
        render: () =>
          onChange ? (
            <DimTokenSpinner
              value={`${spec.minWidth ?? ""}`}
              allowedUnits={["px"]}
              extraOptions={[]}
              onChange={(v) => onDimChange("min-width", v ?? "")}
              data-test-id="screen-variant-min-width-input"
            />
          ) : (
            <div>{spec.minWidth}</div>
          ),
      }}
      maxInput={{
        render: () =>
          onChange ? (
            <DimTokenSpinner
              value={`${spec.maxWidth ?? ""}`}
              allowedUnits={["px"]}
              extraOptions={[]}
              onChange={(v) => onDimChange("max-width", v ?? "")}
              data-test-id="screen-variant-max-width-input"
            />
          ) : (
            <div>{spec.maxWidth}</div>
          ),
      }}
    />
  );
}

export default ScreenVariantSpec;
