// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { observer } from "mobx-react-lite";
import * as React from "react";
import { Component, TplNode, Variant } from "../../../classes";
import { ensure, maybe } from "../../../common";
import { getNamespacedComponentName } from "../../../components";
import { VariantPinState } from "../../../shared/PinManager";
import {
  isStandaloneVariant,
  isStyleVariant,
  isVariantSettingEmpty,
  tryGetVariantSetting,
} from "../../../shared/Variants";
import { isTplVariantable } from "../../../tpls";
import { PlasmicVariantsDrawerRow } from "../../plasmic/plasmic_kit_variants/PlasmicVariantsDrawerRow";
import { Matcher } from "../view-common";
import Chip from "../widgets/Chip";
import { pinStateToPlasmicPinState } from "./VariantRow";

interface VariantsDrawerRowProps {
  variant: Variant;
  pinState: VariantPinState | undefined;
  isFocused?: boolean;
  matcher: Matcher;
  onToggle?: () => void;
  onTarget?: (target: boolean) => void;
  focusedTpl?: TplNode;
  superComp?: Component;
}

const VariantsDrawerRow = observer(function VariantsDrawerRow(
  props: VariantsDrawerRowProps
) {
  const {
    variant,
    pinState,
    isFocused,
    matcher,
    onToggle,
    onTarget,
    focusedTpl,
    superComp,
  } = props;
  const indicatedVs =
    focusedTpl &&
    isTplVariantable(focusedTpl) &&
    maybe(tryGetVariantSetting(focusedTpl, [variant]), (vs) =>
      isVariantSettingEmpty(vs) ? undefined : vs
    );

  const isRecording = pinState?.startsWith("selected");
  return (
    <PlasmicVariantsDrawerRow
      isFocused={isFocused}
      pinState={pinStateToPlasmicPinState(pinState)}
      isIndicated={!!indicatedVs}
      variantPinButton={
        onToggle
          ? {
              onToggle,
              tabIndex: isFocused ? 0 : -1,
            }
          : { render: () => null }
      }
      recordButton={
        onTarget
          ? {
              tooltip: isRecording ? "Stop recording" : "Add to recording",
              onClick: (e) => {
                e.stopPropagation();
                onTarget(!isRecording);
              },
              tabIndex: isFocused ? 0 : -1,
            }
          : { render: () => null }
      }
      isStandalone={isStandaloneVariant(variant)}
    >
      {isStyleVariant(variant) ? (
        ensure(variant.selectors).map((sel) => (
          <Chip key={sel}>{matcher.boldSnippets(sel)}</Chip>
        ))
      ) : superComp && isStandaloneVariant(variant) ? (
        <span>
          {getNamespacedComponentName(superComp)}
          {" - "}
          {matcher.boldSnippets(variant.name)}
        </span>
      ) : (
        matcher.boldSnippets(variant.name)
      )}
    </PlasmicVariantsDrawerRow>
  );
});

export default VariantsDrawerRow;
